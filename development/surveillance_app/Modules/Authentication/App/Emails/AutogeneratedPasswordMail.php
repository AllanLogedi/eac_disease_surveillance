<?php

namespace Modules\Authentication\App\Emails;
use Illuminate\Support\Facades\View;
use Illuminate\Support\Facades\Route;

use Illuminate\Bus\Queueable;
use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Mail\Mailable;
use Illuminate\Mail\Mailables\Content;
use Illuminate\Mail\Mailables\Envelope;
use Illuminate\Queue\SerializesModels;
use Illuminate\Mail\Mailables\Attachment;

class AutogeneratedPasswordMail extends Mailable
{
    use Queueable, SerializesModels;

    public $password;

    /**
     * Create a new message instance.
     *
     * @param string $password The autogenerated password
     */
    public function __construct($password)
    {
        $this->password = $password;
    }

    /**
     * Get the message envelope.
     */
    public function envelope(): Envelope
    {
        return new Envelope(
            subject: 'Your Autogenerated Password',
        );
    }

    /**
     * Get the message content definition.
     */
    // public function content(): Content
    // {
    //     return new Content(
    //         view: 'mail.filess',
    //         // view: 'mail.autogeneratedPassword',
    //         with: ['password' => $this->password],
    //     );
    // }

//     public function content(): Content
// {
//     return new Content(
//         view('emails.autogeneratedPassword'),
//     );
// }

    // public function build()
    // {
    //     // return $this->markdown('Modules/AuthenticationUsrApi/resources/views/mail/AutogeneratedPasswordMail')
    //     //             ->with(['password' => $this->password]);
    //     return $this->view('')
    //     //  return $this->view('_filess')
    //                 ->with(['password' => $this->password]);
    // }

    public function build()
    {
        return $this->with(['password' => $this->password])
               ->route('autogeneratedPassword');
    }

    /**
     * Get the attachments for the message.
     *
     * @return array<int, \Illuminate\Mail\Mailables\Attachment>
     */
    public function attachments(): array
    {
        return [];
    }
}